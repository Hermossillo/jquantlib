<!-- 
ANT build script (ANT is a Java & XML based cross-platform build tool 
and available at http://jakarta.apache.org/ant/). 

author: whoschek@lbl.gov, piotr.wendykier@gmail.com 

See the target "usage" further below for instructions on how to build the software.
-->


<!-- ================================================================= -->
<!-- NOTE: all directories are relative to parallelcolt/                       -->
<!-- ================================================================= -->
<project name="parallelcolt" default="help" basedir=".">

	<property name="version" value="0.4" />

	<property name="dist.dir" value="../${ant.project.name}-dist" />

	<property name="proj.title" value="Parallel Colt" />

	<!-- The directory where *.java files are stored. -->
	<property name="javac.src" value="src" />

	<!-- Destination for *.class files -->
	<property name="javac.dest" value="bin" />

	<!-- Destination for documentation -->
	<property name="doc.dest" value="doc" />

	<!-- Location of jar files -->
	<property name="jar.dir" value="lib" />

	<property name="lib.dir" value="lib" />
		
	
	<!-- The jar file that the jar task will generate -->
	<property name="jar.filename" value="${ant.project.name}-${version}.jar" />

	<!-- file patterns to be excluded from tar in dist targets -->
	<property name="tar.excludes" value="*/bin/** **/lib/${jar.filename} **/doc/** **/*.jardesc" />


	<!-- ================================================================= -->
	<!-- Default target                                                    -->
	<!-- ================================================================= -->
	<target name="help">
		<echo>
First cd into the dir this build file is placed in:

	cd ParallelColt
	 	
Then type one of the following to build the software:

	ant -help         - Print help on general ant usage		
	ant help          - Print this help text		
	ant build         - Compile, generate jars, [javadoc]	 	
	ant doc           - Generate documentation
	ant dist          - Build and generate distribution downloads
	 	
Further individual targets used internally by above targets:
	
	javac             - Compile all *.java files into .class files	
	jar               - Generate jar file(s) from .class files	
</echo>
	</target>

	<!-- ================================================================= -->
	<!-- Remove all generated (compiled) class files.                      -->
	<!-- ================================================================= -->
	<target name="clean">
		<delete dir="${javac.dest}" />
		<delete file="${jar.dir}/${jar.filename}" />
	</target>


	<!-- ================================================================= -->
	<!-- Clean distribution.                                               -->
	<!-- ================================================================= -->
	<target name="clean-dist">
		<delete dir="${dist.dir}" />
	</target>


	<!-- ================================================================= -->
	<!-- Build the software (without generating a distribution)            -->
	<!-- ================================================================= -->
	<target name="build" depends="jar">
	</target>


	<!-- ================================================================= -->
	<!-- Compile all *.java files                                          -->
	<!-- ================================================================= -->
	<target name="javac" depends="clean">

		<mkdir dir="${javac.dest}" />
		<javac classpath="${lib.dir}/junit-4.4.jar:${lib.dir}/blas.jar:${lib.dir}/lapack.jar:${lib.dir}/f2jutil.jar:${lib.dir}/xerbla.jar" srcdir="${javac.src}" destdir="${javac.dest}" includes="**/*.java" deprecation="on" debug="off" compiler="javac1.5" source="1.5" target="1.5">
		</javac>

	</target>


	<!-- ================================================================= -->
	<!-- Generate jar file(s) from *.class files                           -->
	<!-- ================================================================= -->
	<target name="jar" depends="javac">
		<mkdir dir="${jar.dir}" />
		<jar jarfile="${jar.dir}/${jar.filename}" basedir="${javac.dest}" index="yes" compress="yes" />
	</target>


	<!-- ================================================================= -->
	<!-- Generate documentation					                           -->
	<!-- ================================================================= -->
	<target name="doc">

		<delete dir="${doc.dest}" />
		<mkdir dir="${doc.dest}" />

		<javadoc classpath="${lib.dir}/junit-4.4.jar:${lib.dir}/blas.jar:${lib.dir}/lapack.jar:${lib.dir}/f2jutil.jar:${lib.dir}/xerbla.jar" sourcepath="${javac.src}" destdir="${doc.dest}" public="true" author="true" use="true" splitIndex="true" version="true" doctitle="&lt;h2&gt;Parallel &lt;a target=_top href=http://dsd.lbl.gov/~hoschek/colt &gt;Colt&lt;/a&gt; &lt;/h2&gt;&lt;h4&gt;Open Source Libraries for High Performance Scientific and Technical Computing in Java&lt;/h4&gt;&lt;hr&gt;" windowtitle="${proj.title} ${version} - API Specification" header="&lt;b&gt;${proj.title} ${version}&lt;/b&gt;" bottom="&lt;font size=-1 &gt;Jump to the &lt;a target=_top href=http://piotr.wendykier.googlepages.com/parallelcolt &gt;Parallel Colt Homepage&lt;/a&gt;">
			<packageset dir="${javac.src}" />
			<link href="http://java.sun.com/javase/6/docs/api/" />
		</javadoc>
	</target>


	<!-- ================================================================= -->
	<!-- Build a complete distribution. Results go to ${dist.dir} -->
	<!-- ================================================================= -->
	<target name="dist" depends="clean-dist, doc, build">

		<mkdir dir="${dist.dir}" />

		<!-- ============================================================= -->
		<!-- Generate parallelcolt-src.tar.gz -->
		<basename property="proj.basename" file="." />
		<tar tarfile="${dist.dir}/${ant.project.name}-${version}-src.tar.gz" basedir=".." includes="${proj.basename}/" excludes="${tar.excludes}" compression="gzip" longfile="gnu" />

		<!-- ============================================================= -->
		<!-- Generate parallelcolt-src.zip -->
		<zip zipfile="${dist.dir}/${ant.project.name}-${version}-src.zip" basedir=".." includes="${proj.basename}/" excludes="${tar.excludes}" />
		<!-- ============================================================= -->
		<!-- Generate parallelcolt-bin.zip -->
		<zip zipfile="${dist.dir}/${ant.project.name}-${version}-bin.zip" basedir=".." includes="${proj.basename}/lib/*.jar ${proj.basename}/licenses/*.*"/>
		<!-- ============================================================= -->
		<!-- Generate parallelcolt-bin.tar.gz -->
		<tar tarfile="${dist.dir}/${ant.project.name}-${version}-bin.tar.gz" basedir=".." includes="${proj.basename}/lib/*.jar ${proj.basename}/licenses/*.*" compression="gzip" longfile="gnu" />

	</target>

</project>
